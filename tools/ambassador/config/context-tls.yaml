apiVersion: ambassador/v1
kind: TLSContext
name: tls

# 'hosts' defines which the hosts for which this TLSContext is relevant.
# It ties into SNI. A TLSContext without "hosts" is useful only for
# originating TLS.
# type: array of strings
#
hosts: ["*"]

# 'secret' defines a Kubernetes Secret that contains the TLS certificate we
# use for origination or termination. If not specified, Ambassador will look
# at the value of cert_chain_file and private_key_file.
# type: string
#
#secret: None

# 'ca_secret' defines a Kubernetes Secret that contains the TLS certificate we
# use for verifying incoming TLS client certificates.
# type: string
#
#ca_secret: None

# Tells Ambassador whether to interpret a "." in the secret name as a "." or
# a namespace identifier.
# type: boolean
#
# secret_namespacing: true

# 'cert_required' can be set to true to _require_ TLS client certificate
# authentication.
# type: boolean
#
#cert_required: false

# 'alpn_protocols' is used to enable the TLS ALPN protocol. It is required
# if you want to do GRPC over TLS; typically it will be set to "h2" for that
# case.
# type: string (comma-separated list)
#
# alpn_protocols: None

# 'min_tls_version' sets the minimum acceptable TLS version: v1.0, v1.1,
# v1.2, or v1.3. It defaults to v1.0.
min_tls_version: v1.2

# 'max_tls_version' sets the maximum acceptable TLS version: v1.0, v1.1,
# v1.2, or v1.3. It defaults to v1.3.
# max_tls_version: v1.3

# Tells Ambassador to load TLS certificates from a file in it's container.
# type: string
#
cert_chain_file: /etc/certs/dwd_tudelft_nl.crt
private_key_file: /etc/certs/dwd_tudelft_nl.key
cacert_chain_file: /etc/certs/dwd_tudelft_nl_interm.crt
